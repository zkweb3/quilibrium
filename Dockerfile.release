FROM golang:1.23.2-alpine3.20 as build

ARG NODE_VERSION
ARG QCLI_VERSION
ARG MAX_KEY_ID

ENV GOEXPERIMENT=arenas

WORKDIR /opt/ceremonyclient

COPY . .

RUN apk update && apk --no-cache add curl

RUN NFILES=$(curl -s "https://releases.quilibrium.com/release" | grep "linux-amd64") && \
    for f in $NFILES; do \
      echo $f; [ -f $f ] && rm $f; \
      curl -s -O https://releases.quilibrium.com/$f; \
    done
RUN cp "node-${NODE_VERSION}-linux-amd64" "node/node"
RUN cp "node-${NODE_VERSION}-linux-amd64.dgst" "node/node.dgst"
RUN for i in $(seq 1 ${MAX_KEY_ID}); do \
      if [ -f node-${NODE_VERSION}-linux-amd64.dgst.sig.${i} ]; then \
        cp "node-${NODE_VERSION}-linux-amd64.dgst.sig.${i}" "node/node.dgst.sig.${i}"; \
      fi \
    done

WORKDIR /opt/ceremonyclient/client

RUN QFILES=$(curl -s "https://releases.quilibrium.com/qclient-release" | grep "linux-amd64") && \
    for f in $QFILES; do \
      echo $f; [ -f $f ] && rm $f; \
      curl -s -O https://releases.quilibrium.com/$f; \
    done
RUN mv "qclient-${QCLI_VERSION}-linux-amd64" "qclient"
RUN mv "qclient-${QCLI_VERSION}-linux-amd64.dgst" "qclient.dgst"
RUN for i in $(seq 1 ${MAX_KEY_ID}); do \
      if [ -f qclient-${QCLI_VERSION}-linux-amd64.dgst.sig.${i} ]; then \
        mv "qclient-${QCLI_VERSION}-linux-amd64.dgst.sig.${i}" "qclient.dgst.sig.${i}"; \
      fi \
    done

RUN go install github.com/fullstorydev/grpcurl/cmd/grpcurl@v1.9.1

# FROM alpine:3.20
FROM debian:bullseye

ARG NODE_VERSION
ARG GIT_REPO
ARG GIT_BRANCH
ARG GIT_COMMIT

ENV GOEXPERIMENT=arenas

LABEL org.opencontainers.image.title="Quilibrium Network Node"
LABEL org.opencontainers.image.description="Quilibrium is a decentralized alternative to platform as a service providers."
LABEL org.opencontainers.image.version=$NODE_VERSION
LABEL org.opencontainers.image.vendor=Quilibrium
LABEL org.opencontainers.image.url=https://quilibrium.com/
LABEL org.opencontainers.image.documentation=https://quilibrium.com/docs
LABEL org.opencontainers.image.source=$GIT_REPO
LABEL org.opencontainers.image.ref.name=$GIT_BRANCH
LABEL org.opencontainers.image.revision=$GIT_COMMIT

RUN apt-get update && apt-get install -y ca-certificates

COPY --from=build /opt/ceremonyclient/node/node /usr/local/bin
COPY --from=build /opt/ceremonyclient/node/node.dgst /usr/local/bin
COPY --from=build /opt/ceremonyclient/node/node.dgst.sig.* /usr/local/bin

COPY --from=build /opt/ceremonyclient/client/qclient /usr/local/bin
COPY --from=build /opt/ceremonyclient/client/qclient.dgst /usr/local/bin
COPY --from=build /opt/ceremonyclient/client/qclient.dgst.sig.* /usr/local/bin

COPY --from=build /go/bin/grpcurl /usr/local/bin

RUN chmod +x /usr/local/bin/node && chmod +x /usr/local/bin/qclient

WORKDIR /root

ENTRYPOINT ["node"]
